Align-content: alinhar os itens, o conteúdo, dentro do eixo transversal (cross-axis) qundo estão envelopados
stretch: (padrão) esticado
flex-start: gruda no cross-start
flex-end: gruda no cross-end
center: alinha ao crentro do cross-axis
space-between: sem espaço no início e no final, espaço nos meios
space-evenly: começa e termina com espaço
space-around: entre os itens há espaços duplos

Align-items: alinhar os itens, o conteúdo, dentro do eixo transversal (cross-axis)

Justify-content: alinhar os itens, o conteúdo, dentro do eixo principal (main-axis)

Flex-item
Por padrão, os itens não são flexíveis.
order: 0 (padrão), os elementos são exibidos na ordem de inserção.
Se alterarmos o order (ex: 3, 5, -2, 0), as CSS colocam em ordem crescente e exibem (-2,0,3,5)

align-self: aplica aos itens. funciona no cross-axis
auto: herda o alinhamento vertical do pai
flex-start: perto do cross-start
flex-end:
center:
strecht:

Flex-basis: determina largura (ou altura) do elemento filho.
auto: de acordo com o conteúdo
200px: esse será o tamanho, não importa o tamanho do conteúdo. Se não travar, poderá ser encolhido ao encolher o container

Flex-grow: 0 (padrão) - não pode crescer. 1 - pode crescer (qualquer valor positivo e dif de zero, qto maior o valor, maior a proporção de mudança)
Flex-shrink: 1 (padrão) - pode encolher (qualquer valor positivo e dif de zero, qto maior o valor, maior a proporção de mudança). 0 - não pode encolher

Shorthand: sempre para o item filho
flex: flex-grow flex-shrink flex-basis
flex: 0 1 150px (grow:0 shrink:1 basis: 150px)
flex: 0 1 auto é o mesmo que não colocar, pois usa o valor padrão de cada propriedade
flex: initial: flex: 0 1 auto (os dois são iguais)
flex: 0 0 auto (não ser flexível)
flex: none :  flex: 0 0 auto
flex: 1 1 auto (máximmo de flexibilidade)
flex: auto : flex: 0 0 auto
flex: 3 (só muda o falor do primeiro elemento: grow, mantendo o padrão dos demais) : flex: 3 1 auto
